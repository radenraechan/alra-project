[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-04-16T21:39:18.885Z",
        "before": [
          {
            "result": {
              "duration": 25650000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 11,
        "name": "Adding two numbers",
        "description": "",
        "id": "calculated-numbers;adding-two-numbers;;2",
        "after": [
          {
            "result": {
              "duration": 2213000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7173000000,
              "status": "passed"
            },
            "line": 4,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 198000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I click \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 212000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I click addition symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickAdditionSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 193000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I click \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 924000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I get the result is \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:39:55.868Z",
        "before": [
          {
            "result": {
              "duration": 24766000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 12,
        "name": "Adding two numbers",
        "description": "",
        "id": "calculated-numbers;adding-two-numbers;;3",
        "after": [
          {
            "result": {
              "duration": 2193000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7349000000,
              "status": "passed"
            },
            "line": 4,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 188000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I click \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 225000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I click addition symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickAdditionSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1169000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I click \"10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 696000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I get the result is \"15\"",
            "match": {
              "arguments": [
                {
                  "val": "\"15\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:40:32.493Z",
        "before": [
          {
            "result": {
              "duration": 26368000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 13,
        "name": "Adding two numbers",
        "description": "",
        "id": "calculated-numbers;adding-two-numbers;;4",
        "after": [
          {
            "result": {
              "duration": 1952000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7271000000,
              "status": "passed"
            },
            "line": 4,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 420000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I click \"25\"",
            "match": {
              "arguments": [
                {
                  "val": "\"25\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 202000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I click addition symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickAdditionSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3950000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I click \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 673000000,
              "status": "passed"
            },
            "line": 8,
            "name": "I get the result is \"125\"",
            "match": {
              "arguments": [
                {
                  "val": "\"125\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:41:13.372Z",
        "before": [
          {
            "result": {
              "duration": 25058000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 23,
        "name": "Substracting two numbers",
        "description": "",
        "id": "calculated-numbers;substracting-two-numbers;;2",
        "after": [
          {
            "result": {
              "duration": 2006000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7354000000,
              "status": "passed"
            },
            "line": 16,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 170000000,
              "status": "passed"
            },
            "line": 17,
            "name": "I click \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 201000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I click substract symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickSubstractSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 168000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I click \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1390000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I get the result is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:41:49.768Z",
        "before": [
          {
            "result": {
              "duration": 24956000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 24,
        "name": "Substracting two numbers",
        "description": "",
        "id": "calculated-numbers;substracting-two-numbers;;3",
        "after": [
          {
            "result": {
              "duration": 1866000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7152000000,
              "status": "passed"
            },
            "line": 16,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 340000000,
              "status": "passed"
            },
            "line": 17,
            "name": "I click \"10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 187000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I click substract symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickSubstractSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1373000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I click \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 733000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I get the result is \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:42:26.416Z",
        "before": [
          {
            "result": {
              "duration": 24906000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 25,
        "name": "Substracting two numbers",
        "description": "",
        "id": "calculated-numbers;substracting-two-numbers;;4",
        "after": [
          {
            "result": {
              "duration": 2020000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7373000000,
              "status": "passed"
            },
            "line": 16,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 610000000,
              "status": "passed"
            },
            "line": 17,
            "name": "I click \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 956000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I click substract symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickSubstractSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1867000000,
              "status": "passed"
            },
            "line": 19,
            "name": "I click \"25\"",
            "match": {
              "arguments": [
                {
                  "val": "\"25\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 676000000,
              "status": "passed"
            },
            "line": 20,
            "name": "I get the result is \"75\"",
            "match": {
              "arguments": [
                {
                  "val": "\"75\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:43:04.861Z",
        "before": [
          {
            "result": {
              "duration": 24864000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 35,
        "name": "Multiplying two numbers",
        "description": "",
        "id": "calculated-numbers;multiplying-two-numbers;;2",
        "after": [
          {
            "result": {
              "duration": 2159000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7332000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 167000000,
              "status": "passed"
            },
            "line": 29,
            "name": "I click \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 191000000,
              "status": "passed"
            },
            "line": 30,
            "name": "I click multiply symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickMultiplySymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 188000000,
              "status": "passed"
            },
            "line": 31,
            "name": "I click \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 913000000,
              "status": "passed"
            },
            "line": 32,
            "name": "I get the result is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:43:40.722Z",
        "before": [
          {
            "result": {
              "duration": 25210000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 36,
        "name": "Multiplying two numbers",
        "description": "",
        "id": "calculated-numbers;multiplying-two-numbers;;3",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png",
                "name": "file:///C:/Users/my%20laptop/Documents/NetBeansProjects/mobile-automation/src/test/resources/features/calculatedNumbers.feature:36"
              }
            ],
            "result": {
              "duration": 3522000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7512000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 181000000,
              "status": "passed"
            },
            "line": 29,
            "name": "I click \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 186000000,
              "status": "passed"
            },
            "line": 30,
            "name": "I click multiply symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickMultiplySymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1166000000,
              "status": "passed"
            },
            "line": 31,
            "name": "I click \"10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //android.view.View[@content-desc\u003d\"50\"] (tried for 30 second(s) with 1000 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)\r\n\tat com.example.app.base.BasePageObject.find(BasePageObject.java:28)\r\n\tat com.example.app.base.BasePageObject.isDisplayed(BasePageObject.java:44)\r\n\tat com.example.app.pages.CalculatorPage.verifyResultDisplayed(CalculatorPage.java:37)\r\n\tat com.example.steps.CalculateStepDefinitions.iGetTheResultIs(CalculateStepDefinitions.java:30)\r\n\tat ✽.I get the result is \"50\"(file:///C:/Users/my%20laptop/Documents/NetBeansProjects/mobile-automation/src/test/resources/features/calculatedNumbers.feature:32)\r\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-T1G9LT0\u0027, ip: \u0027192.168.174.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_202\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: C:\\Users\\my laptop\\Document..., appPackage: com.example.calculator, automationName: UiAutomator2, databaseEnabled: false, desired: {app: C:\\Users\\my laptop\\Document..., automationName: UiAutomator2, platformName: android, platformVersion: 7.0}, deviceApiLevel: 24, deviceManufacturer: Google, deviceModel: Android SDK built for x86, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 7.0, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1731, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d35fba22-7687-4f3e-bbd3-4641b9b2334b\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@content-desc\u003d\"50\"]}\r\n\tat sun.reflect.GeneratedConstructorAccessor13.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:151)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)\r\n\tat com.example.app.base.BasePageObject.find(BasePageObject.java:28)\r\n\tat com.example.app.base.BasePageObject.isDisplayed(BasePageObject.java:44)\r\n\tat com.example.app.pages.CalculatorPage.verifyResultDisplayed(CalculatorPage.java:37)\r\n\tat com.example.steps.CalculateStepDefinitions.iGetTheResultIs(CalculateStepDefinitions.java:30)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:63)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:49)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:99)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:71)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:151)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:135)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:234)\r\n\tat io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat io.cucumber.junit.CucumberSerenityRunner$RunCucumber.evaluate(CucumberSerenityRunner.java:262)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)\r\n",
              "duration": 30260000000,
              "status": "failed"
            },
            "line": 32,
            "name": "I get the result is \"50\"",
            "match": {
              "arguments": [
                {
                  "val": "\"50\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:44:49.080Z",
        "before": [
          {
            "result": {
              "duration": 26810000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 37,
        "name": "Multiplying two numbers",
        "description": "",
        "id": "calculated-numbers;multiplying-two-numbers;;4",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png",
                "name": "file:///C:/Users/my%20laptop/Documents/NetBeansProjects/mobile-automation/src/test/resources/features/calculatedNumbers.feature:37"
              }
            ],
            "result": {
              "duration": 3275000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7546000000,
              "status": "passed"
            },
            "line": 28,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 395000000,
              "status": "passed"
            },
            "line": 29,
            "name": "I click \"25\"",
            "match": {
              "arguments": [
                {
                  "val": "\"25\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 232000000,
              "status": "passed"
            },
            "line": 30,
            "name": "I click multiply symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickMultiplySymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3372000000,
              "status": "passed"
            },
            "line": 31,
            "name": "I click \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //android.view.View[@content-desc\u003d\"2500\"] (tried for 30 second(s) with 1000 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)\r\n\tat com.example.app.base.BasePageObject.find(BasePageObject.java:28)\r\n\tat com.example.app.base.BasePageObject.isDisplayed(BasePageObject.java:44)\r\n\tat com.example.app.pages.CalculatorPage.verifyResultDisplayed(CalculatorPage.java:37)\r\n\tat com.example.steps.CalculateStepDefinitions.iGetTheResultIs(CalculateStepDefinitions.java:30)\r\n\tat ✽.I get the result is \"2500\"(file:///C:/Users/my%20laptop/Documents/NetBeansProjects/mobile-automation/src/test/resources/features/calculatedNumbers.feature:32)\r\nCaused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-T1G9LT0\u0027, ip: \u0027192.168.174.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_202\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: C:\\Users\\my laptop\\Document..., appPackage: com.example.calculator, automationName: UiAutomator2, databaseEnabled: false, desired: {app: C:\\Users\\my laptop\\Document..., automationName: UiAutomator2, platformName: android, platformVersion: 7.0}, deviceApiLevel: 24, deviceManufacturer: Google, deviceModel: Android SDK built for x86, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 7.0, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1731, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 179c4e2d-1bf1-4281-becc-e0bf3bc09024\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@content-desc\u003d\"2500\"]}\r\n\tat sun.reflect.GeneratedConstructorAccessor13.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:151)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)\r\n\tat com.example.app.base.BasePageObject.find(BasePageObject.java:28)\r\n\tat com.example.app.base.BasePageObject.isDisplayed(BasePageObject.java:44)\r\n\tat com.example.app.pages.CalculatorPage.verifyResultDisplayed(CalculatorPage.java:37)\r\n\tat com.example.steps.CalculateStepDefinitions.iGetTheResultIs(CalculateStepDefinitions.java:30)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:63)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:49)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:99)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:71)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:151)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:135)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:234)\r\n\tat io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat io.cucumber.junit.CucumberSerenityRunner$RunCucumber.evaluate(CucumberSerenityRunner.java:262)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\r\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)\r\n",
              "duration": 30333000000,
              "status": "failed"
            },
            "line": 32,
            "name": "I get the result is \"2500\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2500\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:46:01.109Z",
        "before": [
          {
            "result": {
              "duration": 25257000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 47,
        "name": "Dividing two numbers",
        "description": "",
        "id": "calculated-numbers;dividing-two-numbers;;2",
        "after": [
          {
            "result": {
              "duration": 1959000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7292000000,
              "status": "passed"
            },
            "line": 40,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 178000000,
              "status": "passed"
            },
            "line": 41,
            "name": "I click \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 225000000,
              "status": "passed"
            },
            "line": 42,
            "name": "I click divide symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickDivideSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 195000000,
              "status": "passed"
            },
            "line": 43,
            "name": "I click \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 924000000,
              "status": "passed"
            },
            "line": 44,
            "name": "I get the result is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:46:37.194Z",
        "before": [
          {
            "result": {
              "duration": 24616000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 48,
        "name": "Dividing two numbers",
        "description": "",
        "id": "calculated-numbers;dividing-two-numbers;;3",
        "after": [
          {
            "result": {
              "duration": 2020000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7376000000,
              "status": "passed"
            },
            "line": 40,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 375000000,
              "status": "passed"
            },
            "line": 41,
            "name": "I click \"10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 224000000,
              "status": "passed"
            },
            "line": 42,
            "name": "I click divide symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickDivideSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 920000000,
              "status": "passed"
            },
            "line": 43,
            "name": "I click \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 742000000,
              "status": "passed"
            },
            "line": 44,
            "name": "I get the result is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:47:13.502Z",
        "before": [
          {
            "result": {
              "duration": 24954000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 49,
        "name": "Dividing two numbers",
        "description": "",
        "id": "calculated-numbers;dividing-two-numbers;;4",
        "after": [
          {
            "result": {
              "duration": 1958000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7209000000,
              "status": "passed"
            },
            "line": 40,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 652000000,
              "status": "passed"
            },
            "line": 41,
            "name": "I click \"100\"",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 917000000,
              "status": "passed"
            },
            "line": 42,
            "name": "I click divide symbol",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iClickDivideSymbol()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 724000000,
              "status": "passed"
            },
            "line": 43,
            "name": "I click \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 8
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iClick(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 695000000,
              "status": "passed"
            },
            "line": 44,
            "name": "I get the result is \"50\"",
            "match": {
              "arguments": [
                {
                  "val": "\"50\"",
                  "offset": 20
                }
              ],
              "location": "com.example.steps.CalculateStepDefinitions.iGetTheResultIs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Calculated Numbers",
    "description": "",
    "id": "calculated-numbers",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/calculatedNumbers.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-04-16T21:47:50.646Z",
        "before": [
          {
            "result": {
              "duration": 24728000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 3,
        "name": "See history",
        "description": "",
        "id": "history;see-history",
        "after": [
          {
            "result": {
              "duration": 2026000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7304000000,
              "status": "passed"
            },
            "line": 4,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 181000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I click history button",
            "match": {
              "location": "com.example.steps.HistoryStepDefinitions.iClickHistoryButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1496000000,
              "status": "passed"
            },
            "line": 6,
            "name": "I get the result of history",
            "match": {
              "location": "com.example.steps.HistoryStepDefinitions.iGetTheResultOfHistory()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-16T21:48:26.413Z",
        "before": [
          {
            "result": {
              "duration": 25052000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.before()"
            }
          }
        ],
        "line": 8,
        "name": "Delete history",
        "description": "",
        "id": "history;delete-history",
        "after": [
          {
            "result": {
              "duration": 1905000000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.hooks.AndroidDriverHook.afterDriver(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7182000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on calculator page",
            "match": {
              "location": "com.example.steps.CalculateStepDefinitions.iAmOnCalculatorPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 198000000,
              "status": "passed"
            },
            "line": 10,
            "name": "I click history button",
            "match": {
              "location": "com.example.steps.HistoryStepDefinitions.iClickHistoryButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1456000000,
              "status": "passed"
            },
            "line": 11,
            "name": "I click delete button",
            "match": {
              "location": "com.example.steps.HistoryStepDefinitions.iClickDeleteButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2027000000,
              "status": "passed"
            },
            "line": 12,
            "name": "I get the result after delete history",
            "match": {
              "location": "com.example.steps.HistoryStepDefinitions.iGetTheResultAfterDeleteHistory()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "History",
    "description": "",
    "id": "history",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/history.feature",
    "tags": []
  }
]